@model IEnumerable<InventarioWeb.Models.Inventario>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" ng-controller="InventarioController">

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card mt-3">
                        <div class="card-header">
                            <button class="btn btn-primary disabled" ng-click="editarItem(1, 2);">
                                <i class="fas fa-pen"></i> Editar
                            </button>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <table id="table" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th>Producto</th>
                                        <th>Cantidad</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.NegocioId)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ProductoId)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.InventarioId)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Producto.Proveedor.Nombre)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Producto.Nombre)
                                            </td>
                                            <td width="20%">
                                                <input type="number" min="0" max="999" class="form-control form-control-sm" value="@Html.DisplayFor(modelItem => item.Cantidad)" />
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th>Producto</th>
                                        <th>Cantidad</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->



</div>
<!-- /.content-wrapper -->

<script src="~/Scripts/Controllers/InventarioController.js"></script>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();

    $(function () {
        $("#table").DataTable({
            "language": {
                "decimal": "",
                "emptyTable": "No hay información",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Mostrar _MENU_ Entradas",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "Buscar:",
                "zeroRecords": "Sin resultados encontrados",
                "paginate": {
                    "first": "Primero",
                    "last": "Ultimo",
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            },
            "columnDefs": [
                {
                    "targets": [0,1,2,3],
                    "visible": false
                }
            ],
            "responsive": true,
            "lengthChange": false,
            "autoWidth": false,
            "buttons": ["copy", "excel", "pdf"]
        }).buttons().container().appendTo('#table_wrapper .col-md-6:eq(0)');
    });

</script>